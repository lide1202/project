<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-2.5.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    <!-- 引入配置文件 -->
    <context:property-placeholder location="classpath:remote-dubbo.properties,classpath:remote-db.properties" />


	<!-- 数据源配置 -->
    <!-- 扫描com.hf包里下的所有class文件，配置注解的类全都装入容器中进行管理 -->
    <context:component-scan base-package="com.lee" />
    
    <!-- 添加注解驱动 -->
    <mvc:annotation-driven />

<!-- 数据源配置 开始 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="filters" value="${datasource.filters}" />
		<property name="connectionProperties" value="${datasource.connectionProperties}" />
		<property name="initialSize" value="${datasource.initialSize}" />
		<property name="minIdle" value="${datasource.minIdle}" />
		<property name="maxActive" value="${datasource.maxActive}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${datasource.maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${datasource.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${datasource.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${datasource.validationQuery}" />
		<property name="testWhileIdle" value="${datasource.testWhileIdle}" />
		<property name="testOnBorrow" value="${datasource.testOnBorrow}" />
		<property name="testOnReturn" value="${datasource.testOnReturn}" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${datasource.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${datasource.maxPoolPreparedStatementPerConnectionSize}" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="${datasource.removeAbandoned}" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="${datasource.removeAbandonedTimeout}" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="${datasource.logAbandoned}" />
	</bean>

    <!-- 配置事务管理  -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:META-INF/mybatis/config/mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:META-INF/mybatis/mysql/*.xml</value>
			</list>
		</property>
	</bean>
</beans>
